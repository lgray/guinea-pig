prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
libdir = @libdir@

CC = @CC@
CXX = @CXX@
CXXFLAGS = @CXXFLAGS@
CPPFLAGS = @CPPFLAGS@
FFTW_CFLAGS = @FFTW_CFLAGS@
ROOT_CFLAGS = @ROOT_CFLAGS@
FFTW_LDFLAGS = @FFTW_LDFLAGS@
ROOT_LDFLAGS = @ROOT_LDFLAGS@
CFLAGS = $(CPPFLAGS) $(FFTW_CFLAGS) $(ROOT_CFLAGS) @CFLAGS@
LDFLAGS = @LIBS@ @LDFLAGS@ 

MODULES=besselCPP.o beamParametersCPP.o beamCPP.o backgroundCPP.o pairsCPP.o minijetsCPP.o \
	mathematicalTools.o lumiCPP.o jetParameterCPP.o guineapigCPP.o grvCPP.o gridCPP.o fourierCPP.o \
	fieldCPP.o bhabhaSamplesCPP.o timerCPP.o switchesCPP.o splineCPP.o rndmCPP.o resultsCPP.o principal.o \
	physicalTools.o particlesCPP.o particleBeamCPP.o lectureDonnees.o memory.o tridentCPP.o

all: guinea guinearoot

guinea: $(MODULES) 
	$(CXX) $(CFLAGS) $(MODULES) $(LDFLAGS) $(FFTW_LDFLAGS) -o guinea

guinearoot: $(MODULES) 
	$(CXX) $(CFLAGS) $(MODULES) $(LDFLAGS) $(FFTW_LDFLAGS) $(ROOT_LDFLAGS) -o guinearoot

.cc.o: 
	$(CXX) $(CFLAGS) $(CXXFLAGS) $< -c -o $@

.c.o:
	$(CC) $(CFLAGS) $< -c -o $@


dep:
	g++ -M -MM -E -MD *.cc


besselCPP.o: besselCPP.cc besselCPP.h splineCPP.h

beamParametersCPP.o: beamParametersCPP.cc beamParametersCPP.h \
  abstractParticle.h typeDefs.h mathematicalEntities.h \
  mathematicalTools.h besselCPP.h splineCPP.h rndmCPP.h LesDefines.h \
  physconst.h abstractIOclass.h parametersCPP.h lectureDonnees.h memory.h

beamCPP.o: beamCPP.cc beamCPP.h beamParametersCPP.h abstractParticle.h \
  typeDefs.h mathematicalEntities.h mathematicalTools.h besselCPP.h \
  splineCPP.h rndmCPP.h LesDefines.h physconst.h abstractIOclass.h \
  parametersCPP.h lectureDonnees.h memory.h particleBeamCPP.h \
  particlesCPP.h physicalTools.h mathconst.h fileInputOutput.h \
  fileInputOutputAscii.h IfileInputOutput.h

backgroundCPP.o: backgroundCPP.cc backgroundCPP.h typeDefs.h \
  fileInputOutput.h abstractParticle.h mathematicalEntities.h \
  mathematicalTools.h besselCPP.h splineCPP.h rndmCPP.h LesDefines.h \
  physconst.h abstractIOclass.h fileInputOutputAscii.h IfileInputOutput.h \
  meshCPP.h pairsCPP.h resultsCPP.h mathconst.h beamCPP.h \
  beamParametersCPP.h parametersCPP.h lectureDonnees.h memory.h \
  particleBeamCPP.h particlesCPP.h physicalTools.h switchesCPP.h \
  jetParameterCPP.h minijetsCPP.h grvCPP.h

pairsCPP.o: pairsCPP.cc pairsCPP.h resultsCPP.h LesDefines.h physconst.h \
  mathconst.h beamCPP.h beamParametersCPP.h abstractParticle.h typeDefs.h \
  mathematicalEntities.h mathematicalTools.h besselCPP.h splineCPP.h \
  rndmCPP.h abstractIOclass.h parametersCPP.h lectureDonnees.h memory.h \
  particleBeamCPP.h particlesCPP.h physicalTools.h fileInputOutput.h \
  fileInputOutputAscii.h IfileInputOutput.h switchesCPP.h meshCPP.h

minijetsCPP.o: minijetsCPP.cc minijetsCPP.h typeDefs.h fileInputOutput.h \
  abstractParticle.h mathematicalEntities.h mathematicalTools.h \
  besselCPP.h splineCPP.h rndmCPP.h LesDefines.h physconst.h \
  abstractIOclass.h fileInputOutputAscii.h IfileInputOutput.h \
  resultsCPP.h mathconst.h beamCPP.h beamParametersCPP.h parametersCPP.h \
  lectureDonnees.h memory.h particleBeamCPP.h particlesCPP.h \
  physicalTools.h switchesCPP.h jetParameterCPP.h grvCPP.h pairsCPP.h \
  meshCPP.h

mathematicalTools.o: mathematicalTools.cc mathematicalTools.h besselCPP.h \
  splineCPP.h typeDefs.h rndmCPP.h LesDefines.h physconst.h

lumiCPP.o: lumiCPP.cc lumiCPP.h rndmCPP.h LesDefines.h meshCPP.h \
  abstractParticle.h typeDefs.h mathematicalEntities.h \
  mathematicalTools.h besselCPP.h splineCPP.h physconst.h \
  abstractIOclass.h fileInputOutput.h fileInputOutputAscii.h \
  IfileInputOutput.h

jetParameterCPP.o: jetParameterCPP.cc jetParameterCPP.h typeDefs.h \
  LesDefines.h physconst.h

guineapigCPP.o: guineapigCPP.cc guineapigCPP.h rndmCPP.h LesDefines.h \
  beamParametersCPP.h abstractParticle.h typeDefs.h \
  mathematicalEntities.h mathematicalTools.h besselCPP.h splineCPP.h \
  physconst.h abstractIOclass.h parametersCPP.h lectureDonnees.h memory.h \
  version.h gridCPP.h meshCPP.h beamCPP.h particleBeamCPP.h \
  particlesCPP.h physicalTools.h mathconst.h fileInputOutput.h \
  fileInputOutputAscii.h IfileInputOutput.h extraPhotonCPP.h \
  switchesCPP.h resultsCPP.h pairsCPP.h lumiCPP.h jetParameterCPP.h \
  backgroundCPP.h minijetsCPP.h grvCPP.h bhabhaSamplesCPP.h fourierCPP.h \
  fieldCPP.h timerCPP.h

grvCPP.o: grvCPP.cc grvCPP.h

gridCPP.o: gridCPP.cc gridCPP.h typeDefs.h meshCPP.h rndmCPP.h \
  LesDefines.h beamCPP.h beamParametersCPP.h abstractParticle.h \
  mathematicalEntities.h mathematicalTools.h besselCPP.h splineCPP.h \
  physconst.h abstractIOclass.h parametersCPP.h lectureDonnees.h memory.h \
  particleBeamCPP.h particlesCPP.h physicalTools.h mathconst.h \
  fileInputOutput.h fileInputOutputAscii.h IfileInputOutput.h \
  extraPhotonCPP.h switchesCPP.h resultsCPP.h pairsCPP.h lumiCPP.h \
  jetParameterCPP.h backgroundCPP.h minijetsCPP.h grvCPP.h \
  bhabhaSamplesCPP.h fourierCPP.h fieldCPP.h

fourierCPP.o: fourierCPP.cc fourierCPP.h

fieldCPP.o: fieldCPP.cc fieldCPP.h typeDefs.h LesDefines.h mathconst.h \
  fourierCPP.h

bhabhaSamplesCPP.o: bhabhaSamplesCPP.cc bhabhaSamplesCPP.h particlesCPP.h \
  LesDefines.h typeDefs.h abstractParticle.h mathematicalEntities.h \
  mathematicalTools.h besselCPP.h splineCPP.h rndmCPP.h physconst.h \
  abstractIOclass.h physicalTools.h pairsCPP.h resultsCPP.h mathconst.h \
  beamCPP.h beamParametersCPP.h parametersCPP.h lectureDonnees.h memory.h \
  particleBeamCPP.h fileInputOutput.h fileInputOutputAscii.h \
  IfileInputOutput.h switchesCPP.h meshCPP.h

timerCPP.o: timerCPP.cc timerCPP.h LesDefines.h

switchesCPP.o: switchesCPP.cc switchesCPP.h typeDefs.h LesDefines.h \
  abstractParticle.h mathematicalEntities.h mathematicalTools.h \
  besselCPP.h splineCPP.h rndmCPP.h physconst.h abstractIOclass.h \
  parametersCPP.h lectureDonnees.h memory.h

splineCPP.o: splineCPP.cc splineCPP.h fileInputOutput.h \
  abstractParticle.h typeDefs.h mathematicalEntities.h \
  mathematicalTools.h besselCPP.h rndmCPP.h LesDefines.h physconst.h \
  abstractIOclass.h fileInputOutputAscii.h IfileInputOutput.h

rndmCPP.o: rndmCPP.cc rndmCPP.h LesDefines.h mathconst.h

resultsCPP.o: resultsCPP.cc resultsCPP.h LesDefines.h physconst.h \
  mathconst.h beamCPP.h beamParametersCPP.h abstractParticle.h typeDefs.h \
  mathematicalEntities.h mathematicalTools.h besselCPP.h splineCPP.h \
  rndmCPP.h abstractIOclass.h parametersCPP.h lectureDonnees.h memory.h \
  particleBeamCPP.h particlesCPP.h physicalTools.h fileInputOutput.h \
  fileInputOutputAscii.h IfileInputOutput.h switchesCPP.h

principal.o: principal.cc guineapigCPP.h rndmCPP.h LesDefines.h \
  beamParametersCPP.h abstractParticle.h typeDefs.h \
  mathematicalEntities.h mathematicalTools.h besselCPP.h splineCPP.h \
  physconst.h abstractIOclass.h parametersCPP.h lectureDonnees.h memory.h \
  version.h gridCPP.h meshCPP.h beamCPP.h particleBeamCPP.h \
  particlesCPP.h physicalTools.h mathconst.h fileInputOutput.h \
  fileInputOutputAscii.h IfileInputOutput.h extraPhotonCPP.h \
  switchesCPP.h resultsCPP.h pairsCPP.h lumiCPP.h jetParameterCPP.h \
  backgroundCPP.h minijetsCPP.h grvCPP.h bhabhaSamplesCPP.h fourierCPP.h \
  fieldCPP.h timerCPP.h

physicalTools.o: physicalTools.cc physicalTools.h besselCPP.h splineCPP.h \
  typeDefs.h rndmCPP.h LesDefines.h physconst.h mathematicalEntities.h \
  mathematicalTools.h abstractIOclass.h

particlesCPP.o: particlesCPP.cc particlesCPP.h LesDefines.h typeDefs.h \
  abstractParticle.h mathematicalEntities.h mathematicalTools.h \
  besselCPP.h splineCPP.h rndmCPP.h physconst.h abstractIOclass.h \
  physicalTools.h tridentCPP.h

particleBeamCPP.o: particleBeamCPP.cc particleBeamCPP.h particlesCPP.h \
  LesDefines.h typeDefs.h abstractParticle.h mathematicalEntities.h \
  mathematicalTools.h besselCPP.h splineCPP.h rndmCPP.h physconst.h \
  abstractIOclass.h physicalTools.h mathconst.h fileInputOutput.h \
  fileInputOutputAscii.h IfileInputOutput.h

lectureDonnees.o: lectureDonnees.c lectureDonnees.h

memory.o: memory.c memory.h

tridentCPP.o: tridentCPP.cc tridentCPP.h physicalTools.h rndmCPP.h \
  gridCPP.h \

clean :

	rm -f $(MODULES) guinea guinearoot
